include ../../config.mk 


#ifeq ($(OSTYPE),cygwin)
#all: $(TARGET) pvm_test
#else
#all: $(TARGET)
#endif

all: $(TARGET) pvm_headless
#pvm_x11

ifneq ($(PHANTOM_NO_PVM_TEST),true)
ifeq ($(OSTYPE),cygwin)
ifeq ($(ARCH),ia32)
all: $(TARGET) pvm_test 
endif
endif
endif


W32GCC = -ffreestanding -I- $(addprefix -I,$(INCDIRS)) -I. -c

nonstandalone.o: nonstandalone.c
	$(CC) -m32 -c nonstandalone.c

win_screen_win.o: win_screen_win.c
	$(CC) -m32 -c win_screen_win.c

win_hal_win.o: win_hal_win.c
	$(CC) -m32 -c win_hal_win.c

unix_hal_unix.o: unix_hal_unix.c
	$(CC) -m32 -c unix_hal_unix.c

x11_display.o: x11_display.c
	$(CC) -m32 -c x11_display.c

GLLIB=../lib/libTinyGL.a  ../libc/strnstrn.o 

ifeq ($(OSTYPE),cygwin)
OSLIB = -lgdi32 ../lib/libtuned.a ../lib/libphantom.a ../lib/libwin.a ../lib/libphantom.a 
else
OSLIB = ../lib/libtuned.a ../lib/libphantom_c.a ../lib/libphantom.a ../lib/libwin.a ../lib/libphantom.a 
endif

PVM_TEST_OBJFILES=pvm_main.o nonstandalone.o win_hal.o win_bulk.o win_screen.o win_screen_win.o win_hal_win.o
X11_TEST_OBJFILES=pvm_main.o nonstandalone.o win_hal.o win_bulk.o x11_screen.o x11_display.o 
HLS_TEST_OBJFILES=pvm_main.o nonstandalone.o win_bulk.o headless_screen.o unix_hal.o unix_hal_unix.o 


pvm_test: pvm_main.o nonstandalone.o $(GLLIB) libphantom_vm.a  $(PVM_TEST_OBJFILES) 
	$(CC) -m32 -g -ffreestanding -o $@ $^ $(OSLIB) libphantom_vm.a 

pvm_x11: pvm_main.o nonstandalone.o $(GLLIB) libphantom_vm.a  $(X11_TEST_OBJFILES)
	$(CC) -m32 -g -ffreestanding -o $@ $^ $(OSLIB) libphantom_vm.a -lX11

pvm_headless: pvm_main.o nonstandalone.o $(GLLIB) libphantom_vm.a  $(HLS_TEST_OBJFILES)
	$(CC) -m32 -g  -o $@ $^ $(OSLIB) libphantom_vm.a -lpthread
#	$(CC) -m32 -g -ffreestanding -o $@ $^ $(OSLIB) libphantom_vm.a -lpthread


#win_screen_win.o win_hal_win.o
